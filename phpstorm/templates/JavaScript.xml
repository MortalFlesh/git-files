<templateSet group="JavaScript">
  <template name="reactComponent" value="import React from 'react';&#10;&#10;const $NAME$ = React.createClass({&#10;    render() {&#10;        return (&#10;            &lt;div className=&quot;$NAME$&quot;&gt;&#10;                &#10;            &lt;/div&gt;&#10;        );&#10;    }&#10;});&#10;&#10;export default $NAME$;&#10;" description="blank react component for browserify" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactStore" value="import * as actions from './actions';&#10;import {$type$Cursor} from './../app/state';&#10;import dispatcher from './../lib/dispatcher';&#10;&#10;export const dispatchToken = dispatcher.register(({action, data}) =&gt; {&#10;    switch(action) {&#10;        case actions.set$fieldName$:&#10;            setToCursor('$field$', data);&#10;            break;&#10;    }&#10;});&#10;&#10;function setToCursor(key, value) {&#10;    $type$Cursor(($type$) =&gt; $type$.set(key, value));&#10;}&#10;&#10;export function get$fieldName$() {&#10;    return $type$Cursor().get('$field$');&#10;}&#10;" description="store for flux" toReformat="false" toShortenFQNames="true">
    <variable name="type" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="fieldName" expression="capitalize(String)" defaultValue="" alwaysStopAt="true" />
    <variable name="field" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactActions" value="import dispatcher from './../lib/dispatcher';&#10;&#10;export function set$fieldName$($value$: $valueType$) {&#10;    dispatcher.dispatch(set$fieldName$, $value$);&#10;}&#10;" description="actions for flux" toReformat="false" toShortenFQNames="true">
    <variable name="fieldName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="valueType" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactAction" value="export function set$fieldName$($value$: $valueType$) {&#10;    dispatcher.dispatch(set$fieldName$, $value$);&#10;}&#10;" description="flux action" toReformat="false" toShortenFQNames="true">
    <variable name="fieldName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="valueType" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactComponentPure" value="import React from 'react';&#10;import PureRenderMixin from 'react-addons-pure-render-mixin';&#10;&#10;const $NAME$ = React.createClass({&#10;    mixins: [PureRenderMixin],&#10;&#10;    render() {&#10;        return (&#10;            &lt;div className=&quot;$NAME$&quot;&gt;&#10;                &#10;            &lt;/div&gt;&#10;        );&#10;    }&#10;});&#10;&#10;export default $NAME$;&#10;" description="blank react component with pure render mixin" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactRecord" value="import {Record} from 'immutable';&#10;&#10;export default new Record({&#10;    &#10;});&#10;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="jQnamespace" value="(function ($) {&#10;    $(document).ready(function () {&#10;        &#10;        &#10;        &#10;    });&#10;})(window.jQuery);&#10;" description="New empty jQuery namespace" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="route" value="@Route(&quot;$route$&quot;, name=&quot;$name$&quot;)" description="add new route annotation" toReformat="false" toShortenFQNames="true">
    <variable name="route" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="route-https" value=", schemes={&quot;https&quot;}" description="route annotation scheme" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="route-requirements-digit" value=", requirements={&quot;$field$&quot; = &quot;\d+&quot;}" description="route annotation requirements \d+" toReformat="false" toShortenFQNames="true">
    <variable name="field" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="route-multiline" value="@Route(&#10;*     &quot;$route$&quot;,&#10;*     name=&quot;$name$&quot;,&#10;*     requirements={&quot;$field$&quot; = &quot;\d+&quot;}&#10;* )" description="route annotation on more lines" toReformat="false" toShortenFQNames="true">
    <variable name="route" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="field" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="prif" value="/** @private */&#10;$name$($parameters$) {&#10;    &#10;}" description="Private method" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="parameters" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactClass" value="import React from 'react';&#10;&#10;class $NAME$ extends React.Component {&#10;    render() {&#10;        return (&#10;            &lt;div className=&quot;$NAME$&quot;&gt;&#10;                &#10;            &lt;/div&gt;&#10;        );&#10;    }&#10;}&#10;&#10;export default $NAME$;&#10;" description="blank react class for browserify" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactClassPure" value="import React from 'react';&#10;&#10;class $NAME$ extends React.PureComponent {&#10;    render() {&#10;        return (&#10;            &lt;div className=&quot;$NAME$&quot;&gt;&#10;                &#10;            &lt;/div&gt;&#10;        );&#10;    }&#10;}&#10;&#10;export default $NAME$;&#10;" description="blank react class for browserify" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactPropTypes" value="import PropTypes from 'prop-types';&#10;&#10;$NAME$.propTypes = {&#10;    $FIELD$: PropTypes.$TYPE$.isRequired,&#10;};" description="react prop types for class" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FIELD" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactConstructor" value="constructor(props) {&#10;    super(props);&#10;}" description="react constructor with props" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactContainer" value="import {connect} from &quot;react-redux&quot;;&#10;import * as actions from &quot;./action&quot;;&#10;&#10;import $NAME$ from &quot;./$NAME$&quot;;&#10;&#10;const mapStateToProps = (state) =&gt; {&#10;    const {&#10;    } = state;&#10;&#10;    return {&#10;    };&#10;};&#10;&#10;export default connect(&#10;    mapStateToProps,&#10;    actions&#10;)($NAME$);&#10;" description="blank react container" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactReducer" value="import $STATE$ from &quot;./../state&quot;;&#10;import {} from &quot;./../constant&quot;;&#10;&#10;const initialState = new $STATE$();&#10;&#10;export default (state = initialState, action) =&gt; {&#10;    switch (action.type) {&#10;        default:&#10;            return state;&#10;    }&#10;};&#10;" description="react reducer" toReformat="false" toShortenFQNames="true">
    <variable name="STATE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactStateless" value="import React from 'react';&#10;&#10;const $NAME$ = () =&gt; (&#10;    &lt;div&gt;&#10;        &#10;    &lt;/div&gt;&#10;);&#10;&#10;export default $NAME$;&#10;" description="react stateless component" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="log" value="console.log($log$);" description="insert console.log()" toReformat="false" toShortenFQNames="true">
    <variable name="log" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>