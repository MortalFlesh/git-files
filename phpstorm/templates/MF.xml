<templateSet group="MF">
  <template name="notImplementedYet" value="throw new \Exception(sprintf('Method %s is not implemented yet.', __METHOD__));" description="NotImplementedYet exception throw" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="provider" value="public function $method$Provider()&#10;{&#10;    return [&#10;        '$case$' =&gt; [                &#10;        ],&#10;    ];&#10;}" description="PHPUnit Provider" toReformat="false" toShortenFQNames="true">
    <variable name="method" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="case" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="doctrineTable" value="@ORM\Table(name=&quot;$table$&quot;,indexes={&#10;*     @ORM\Index(name=&quot;$index$_idx&quot;, columns={&quot;$column$&quot;}),&#10;* })" description="table annotation for doctrine entity" toReformat="false" toShortenFQNames="true">
    <variable name="table" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="index" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="column" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="col" value="@ORM\Column(type=&quot;$type$&quot;)" description="doctrine column annotation" toReformat="false" toShortenFQNames="true">
    <variable name="type" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="skip" value="$this-&gt;markTestSkipped('$message$');" description="Test - mark test skipped" toReformat="false" toShortenFQNames="true">
    <variable name="message" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="fun" value="function ($PARAMETERS$) {&#10;    $END$&#10;}" description="Lambda function" toReformat="false" toShortenFQNames="true">
    <variable name="PARAMETERS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="pubc" value="public const $NAME$ = $TEXT$;$END$" description="Public constant" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="pric" value="private const $NAME$ = $TEXT$;$END$" description="Private constant" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="proc" value="protected const $NAME$ = $TEXT$;$END$" description="Protected constant" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TEXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="tas" value="$this-&gt;assertSame($END$);" description="this assertSame" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="tae" value="$this-&gt;assertEquals($END$);" description="this assertEquals" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
</templateSet>